version: '2'
services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    container_name: kafka
    environment:
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_LISTENERS: PLAINTEXT://kafka:9092
       KAFKA_CREATE_TOPICS: "itemlocation:1:1"
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
       
    depends_on:
      - zookeeper

  so1:
    image: splunk/splunk:latest
    container_name: so1
    environment:
       - SPLUNK_START_ARGS=--accept-license
       - SPLUNK_PASSWORD=teste0101
    ports:
      - 8000:8000
      - 8089:8089
      - 8088:8088

    depends_on:
      - kafka

#splunk:
#logar: admin, teste0101
#1) instalar imagem;
#2) configurar token em: 
#https://docs.splunk.com/Documentation/Splunk/8.1.2/Data/UsetheHTTPEventCollector
#	settings -> data input -> new token
#3) exemplo de chamada:
#curl -k "https://localhost:8088/services/collector" \
#    -H "Authorization: Splunk f6ced127-f84e-4f72-a370-f86a05c9ed87" \
#    -d '{"event": "Hello, world!", "sourcetype": "manual"}'

  cassandra:
    image: cassandra:3.11.2
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    restart: always
    volumes:
      - ./out/cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

    depends_on:
      - so1 
      
  grafana:
    restart: always
    container_name: grafana
    image: grafana/grafana:6.2.1
    ports:
      - 3000:3000
    #volumes:
    #  - grafanadata:/var/lib/grafana      
      
  prometheus:
    restart: always
    container_name: prometheus
    image: prom/prometheus:v2.1.0
    ports:
      - 9090:9090
    volumes:
      - 'C:/Users/Hugo/Documents/PROJS/DOCKER/kafka/prometheus.yml:/prom.yml'
    #command: 'C:/Users/Hugo/Documents/PROJS/DOCKER/kafka/prometheus.yml'
    command:
      - '--config.file=/prom.yml'

  producerApp:
    image: openjdk:11
    container_name: "producerApp"
    restart: always
    ports:
     - 9000:9000
     - 9100:9100
    volumes:
      - "C:/Users/Hugo/Documents/PROJS/DOCKER/kafka/kafka-producer-master/target/demo-producer-0.0.1-SNAPSHOT.jar:/app.jar"
    command: ['java', '-jar', '/app.jar']#

    depends_on:
    #  - cassandra
      - prometheus
      - grafana
      
  consumerApp:
    image: openjdk:11
    container_name: "consumerApp"
    restart: always
    ports:
     - 9001:9001
    volumes:
      - "C:/Users/Hugo/Documents/PROJS/DOCKER/kafka/kafka-consumer-master/target/demo-consumer-0.0.1-SNAPSHOT.jar:/app.jar"
    command: ['java', '-jar', '/app.jar']#

    depends_on:
      - producerApp    

     